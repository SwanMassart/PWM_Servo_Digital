library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;


entity top_level_tb is
end top_level_tb;

architecture sim of top_level_tb is
    ----------------------------------------------------------------
    -- DUT I/O signals
    ----------------------------------------------------------------
    signal BTNL, BTNR, BTNC, BTND   : std_logic := '0';
    signal CLK100MHZ                : std_logic := '0';
    signal SW                       : std_logic := '0';
    signal SW_Servo                 : std_logic_vector(1 downto 0) := (others => '1');

    signal LED16_G, LED16_R         : std_logic;
    signal CA, CB, CC, CD, CE, CF, CG, DP : std_logic;
    signal LED                      : std_logic_vector(1 downto 0);
    signal AN                       : std_logic_vector(7 downto 0);
    signal PWMOut                   : std_logic_vector(1 downto 0);
begin
    clk_proc : process
    begin
        CLK100MHZ <= '0';  wait for 5 ns;
        CLK100MHZ <= '1';  wait for 5 ns;
    end process;

    dut : entity work.top_level
        port map (
            BTNL      => BTNL,
            BTNR      => BTNR,
            BTNC      => BTNC,
            BTND      => BTND,
            CLK100MHZ => CLK100MHZ,
            SW        => SW,
            SW_Servo  => SW_Servo,
            LED16_G   => LED16_G,
            LED16_R   => LED16_R,
            CA        => CA,
            CB        => CB,
            CC        => CC,
            CD        => CD,
            CE        => CE,
            CF        => CF,
            CG        => CG,
            DP        => DP,
            LED       => LED,
            AN        => AN,
            PWMOut    => PWMOut
        );

    stim : process
    begin
        -- Power-up delay
        wait for 200 ns;

        -- Centre both servos
        BTNC <= '1';  wait for 20 ns;  BTNC <= '0';
        wait for 300 ns;

        -- Sweep LEFT
        BTNL <= '1';  wait for 2 ms;  BTNL <= '0';
        wait for 1 ms;

        -- Sweep RIGHT
        BTNR <= '1';  wait for 4 ms;  BTNR <= '0';
        wait for 1 ms;

        -- Toggle speed (fast → slow → fast)
        SW <= '1';   wait for 500 us;  SW <= '0';
        wait for 500 us;
        SW <= '1';   wait for 500 us;  SW <= '0';

        -- Disable servo 1 for 2 ms then enable again
        SW_Servo(0) <= '0';  -- disable servo 1
        wait for 2 ms;
        SW_Servo(0) <= '1';  -- enable servo 1

        -- Run idle for observation
        wait for 10 ms;

        report "Simulation completed successfully" severity note;
        wait;
    end process;

end architecture sim;
